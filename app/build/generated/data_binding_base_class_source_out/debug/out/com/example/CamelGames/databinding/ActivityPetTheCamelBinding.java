// Generated by view binder compiler. Do not edit!
package com.example.CamelGames.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.CamelGames.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPetTheCamelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView countdownTextView;

  @NonNull
  public final ImageView cuteCml;

  @NonNull
  public final Button launchButton;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView petCounter;

  @NonNull
  public final TextView showScore;

  private ActivityPetTheCamelBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView countdownTextView, @NonNull ImageView cuteCml, @NonNull Button launchButton,
      @NonNull ConstraintLayout main, @NonNull TextView petCounter, @NonNull TextView showScore) {
    this.rootView = rootView;
    this.countdownTextView = countdownTextView;
    this.cuteCml = cuteCml;
    this.launchButton = launchButton;
    this.main = main;
    this.petCounter = petCounter;
    this.showScore = showScore;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPetTheCamelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPetTheCamelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pet_the_camel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPetTheCamelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.countdownTextView;
      TextView countdownTextView = ViewBindings.findChildViewById(rootView, id);
      if (countdownTextView == null) {
        break missingId;
      }

      id = R.id.cute_cml;
      ImageView cuteCml = ViewBindings.findChildViewById(rootView, id);
      if (cuteCml == null) {
        break missingId;
      }

      id = R.id.launch_button;
      Button launchButton = ViewBindings.findChildViewById(rootView, id);
      if (launchButton == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.pet_counter;
      TextView petCounter = ViewBindings.findChildViewById(rootView, id);
      if (petCounter == null) {
        break missingId;
      }

      id = R.id.show_score;
      TextView showScore = ViewBindings.findChildViewById(rootView, id);
      if (showScore == null) {
        break missingId;
      }

      return new ActivityPetTheCamelBinding((ConstraintLayout) rootView, countdownTextView, cuteCml,
          launchButton, main, petCounter, showScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
